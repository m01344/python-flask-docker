name: Pull image from ACR

on: [push]

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: unipertestregistry
  CLUSTER_NAME: cmcaks-poc-001
  CLUSTER_RESOURCE_GROUP: cmcaks-paas-poc-rgp-001
  NAMESPACE: test
  APP_NAME: python-flask
  
jobs:
  pull:
    runs-on: ubuntu-latest
    environment: poc
    steps:
    - uses: actions/checkout@master
    
    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }} 
        password: ${{ secrets.ACR_PASSWORD }}
        
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Set the target Azure Kubernetes Service (AKS) cluster. 
    #- uses: azure/aks-set-context@v1
      #with:
        #creds: '${{ secrets.AZURE_CREDENTIALS }}'
        #cluster-name: ${{ env.CLUSTER_NAME }}
        #resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
        
    - uses: azure/k8s-set-context@v2
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.AZURE_KUBECONFIG }}
        context: cmcaks-poc-001-admin
        
    #- run: |
        #kubectl config set-context python-flask --user=namespace-admin --cluster=cmcaks-poc-001 --namespace=python-flask
        #kubectl config set-credentials python-flask --username=nsadmin --password=password
        #kubectl config use-context python-flask
        
    - run: |
        kubectl config get-contexts  
    
    - run: |
        kubectl config view
     
    # Create namespace if doesn't exist
    #- run: |
    #    kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    # Create imagepullsecret for Azure Container registry (ACR)
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.ACR_USERNAME  }}
        container-registry-password: ${{ secrets.ACR_PASSWORD }}
        secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
    
    # Deploy app to AKS
    #- uses: azure/k8s-deploy@v1
      #with:
        #manifests: |
          #manifests/service.yml
          #manifests/deployment.yml
        ##images: |
          ##${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:latest
        #imagepullsecrets: |
          #${{ env.REGISTRY_NAME }}-registry-connection
        #namespace: ${{ env.NAMESPACE }}
